{"version":3,"sources":["lib/webp-decoder.js","App.js","serviceWorker.js","index.js"],"names":["importClassicScript","url","script","document","createElement","type","src","p","Promise","resolve","onload","body","appendChild","self","Module","WebPDecoder","BMPImageEncoder","imageData","padding","width","sizeInBytes","height","bmpBuffer","DataView","ArrayBuffer","setUint8","charCodeAt","setUint32","setUint16","rowSize","Math","floor","i","y","x","pos","data","rgb","fillOffset","Blob","fetchWebPDecoder","a","initRuntime","onRuntimeInitialized","importScripts","console","warning","version","cwrap","getInfo","decode","buffer","this","size","byteLength","ptr","_malloc","HEAPU8","set","Uint8Array","getValue","_free","info","resultPtr","resultView","result","Uint8ClampedArray","img","ImageData","encode","canvas","jpeg","getContext","putImageData","OffscreenCanvas","convertToBlob","quality","toBlob","blob","loadingDecoder","sleepUntil","fn","res","timmer","setInterval","clearInterval","getDecoder","WEBP_TESTER","transformFile","file","toJpeg","name","replace","arrayBuffer","decoder","decodeToBlob","href","URL","createObjectURL","download","className","innerText","click","setTimeout","revokeObjectURL","App","useState","canceled","setCanceled","isDragOver","setDrag","isJPEG","setToJpeg","closeDrag","handleDragOver","useCallback","evt","event","dataTransfer","dropEffect","stopPropagation","preventDefault","handleDrop","files","Array","from","filter","length","handleESCKey","log","changeType","lastEnter","useRef","listern","current","target","useEffect","el","addEventListener","removeEventListener","handleSelectFile","value","clsPNG","clsJPG","title","onMouseDown","id","multiple","onChange","accept","hidden","htmlFor","onClick","undefined","data-ribbon","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d853e18f.chunk.js","sourcesContent":["function importClassicScript(url) {\n  const script = document.createElement(\"script\")\n  script.type = \"text/javascript\";\n  script.src = url;\n\n  const p = new Promise(resolve => script.onload = resolve);\n  document.body.appendChild(script);\n  return p;\n}\n\nself.Module = typeof self.Module !== \"undefined\" ? self.Module : {};\n\nclass BMPImageEncoder {\n  static encode(imageData) {\n    const offset = 54;\n\n    const padding = imageData.width % 4;\n    const pixelArraySize = imageData.height * (3 * imageData.width + padding);\n    const bitsPerPixel = 24;\n    const sizeInBytes = pixelArraySize * (bitsPerPixel / 8) + offset;\n\n    let bmpBuffer = new DataView(new ArrayBuffer(sizeInBytes));\n\n    // Bitmap file header\n    bmpBuffer.setUint8(0, \"B\".charCodeAt(0));\n    bmpBuffer.setUint8(1, \"M\".charCodeAt(0));\n    bmpBuffer.setUint32(2, sizeInBytes, true);\n    bmpBuffer.setUint32(6, /* reserved */ 0, true);\n    bmpBuffer.setUint32(10, offset, true);\n\n    // DIB header (bitmap info header) - Here \"Windows BITMAPINFOHEADER\"\n    const headerSize = 40;\n    bmpBuffer.setUint32(14, headerSize, true);\n    bmpBuffer.setUint32(18, imageData.width, true);\n    bmpBuffer.setUint32(22, imageData.height, true);\n    bmpBuffer.setUint16(26, /* planes */ 1, true);\n    bmpBuffer.setUint16(28, bitsPerPixel, true);\n    bmpBuffer.setUint32(30, /* compression method: BI_RGB (none) */ 0, true);\n    bmpBuffer.setUint32(34, /* image size, dummy 0 for BI_RGB */ 0, true);\n    bmpBuffer.setUint32(38, /* horizontal resolution pixel per meter */ 0, true);\n    bmpBuffer.setUint32(42, /* vertical resolution pixel per meter */ 0, true);\n    bmpBuffer.setUint32(46, /* colors in color palette */ 0, true);\n    bmpBuffer.setUint32(50, /* important colors, generally ignored */ 0, true);\n\n    // Pixel array\n    const rowSize = Math.floor((24 * imageData.width + 31) / 32) * 4;\n\n    let i = 0;\n    for (let y = imageData.height - 1; y >= 0; y--) {\n      for (let x = 0; x < imageData.width; x++) {\n        let pos = offset + y * rowSize + x * 3;\n        bmpBuffer.setUint8(pos + 2, imageData.data[i++], true); // red\n        bmpBuffer.setUint8(pos + 1, imageData.data[i++], true); // green\n        bmpBuffer.setUint8(pos, imageData.data[i++], true); // blue\n        if (!imageData.rgb) { // Skip alpha\n          i++;\n        }\n      }\n\n      const fillOffset = offset + y * rowSize + imageData.width * 3;\n      switch (padding) {\n        case 3:\n          bmpBuffer.setUint8(fillOffset, 0, true);\n        case 2:\n          bmpBuffer.setUint8(fillOffset + 1, 0, true);\n        case 1:\n          bmpBuffer.setUint8(fillOffset + 2, 0, true);\n      }\n    }\n\n    return new Blob([bmpBuffer], { type: 'image/bmp' });\n  }\n}\n\n\nexport async function fetchWebPDecoder() {\n  const initRuntime = (async () => {\n    const p = new Promise(resolve => {\n      self.Module.onRuntimeInitialized = resolve;\n    });\n\n    if (self && self.document) {\n      await importClassicScript('./webp_wasm.js');\n    }\n    else if (self && self.importScripts) {\n      /* sync */ importScripts('./webp_wasm.js');\n    } else {\n      console.warning(\"Cannot auto import 'webp_wasm.js' from script imported from worker\");\n    }\n    return p;\n  })();\n\n  await initRuntime;\n\n  const version = Module.cwrap('version', 'number', []);\n  const getInfo = Module.cwrap('getInfo', 'number', ['number', 'number']);\n  const decode = Module.cwrap('decode', 'number', ['number', 'number']);\n\n  class WebPDecoder {\n    constructor(buffer) {\n      this.size = buffer.byteLength;\n      this.ptr = Module._malloc(this.size);\n      Module.HEAPU8.set(new Uint8Array(buffer), this.ptr);\n    }\n\n    version() {\n      return version();\n    }\n\n    info() {\n      const ptr = getInfo(this.ptr, this.size);\n      const success = !!Module.getValue(ptr, \"i32\");\n      if (!success) {\n        Module._free(ptr);\n        return { width: null, height: null };\n      }\n      const width = Module.getValue(ptr + 4, \"i32\");\n      const height = Module.getValue(ptr + 8, \"i32\");\n\n      Module._free(ptr);\n\n      return { width, height };\n    }\n\n    decode() {\n      let { width, height } = this.info();\n\n      const resultPtr = decode(this.ptr, this.size);\n      const resultView = new Uint8Array(Module.HEAPU8.buffer, resultPtr, width * height * 4);\n      const result = new Uint8ClampedArray(resultView);\n      Module._free(resultPtr);\n\n      return result;\n    }\n\n    decodeToBMP() {\n      let { width, height } = this.info();\n\n      const result = this.decode();\n      const img = new ImageData(result, width, height);\n\n      return BMPImageEncoder.encode(img);\n    }\n\n    decodeToBlob(canvas, jpeg) {\n      let { width, height } = this.info();\n\n      const result = this.decode();\n      const img = new ImageData(result, width, height);\n\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext('2d');\n      ctx.putImageData(img, 0, 0);\n      let type = 'image/png'\n      if (jpeg) {\n        type = 'image/jpeg'\n      }\n      if (typeof OffscreenCanvas !== \"undefined\" && canvas instanceof OffscreenCanvas) {\n        if (canvas.convertToBlob) {\n          return canvas.convertToBlob({ type: type, quality: 1 });\n        } else {\n          return canvas.toBlob(type, 1); // Firefox API.\n        }\n      }\n\n      return new Promise(resolve => {\n        canvas.toBlob(blob => resolve(blob));\n      });\n    }\n  }\n\n  return WebPDecoder;\n}","/* eslint-disable default-case */\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport './App.css';\nimport { fetchWebPDecoder } from './lib/webp-decoder'\n\nlet WebPDecoder;// WebP解码类\nlet loadingDecoder = false;//异步标记位,防止多次加载脚本\n\nconst sleepUntil = async fn => {\n  if (typeof fn !== 'function') {\n    return\n  }\n  await new Promise(res => {\n    let timmer = setInterval(() => {\n      if (fn()) {\n        clearInterval(timmer)\n        res()\n      }\n    }, 20)\n  })\n}\nconst getDecoder = async () => {\n  if (loadingDecoder) {\n    await sleepUntil(() => typeof WebPDecoder !== 'undefined')\n    return WebPDecoder\n  }\n  if (!WebPDecoder) {\n    loadingDecoder = true\n    WebPDecoder = await fetchWebPDecoder()\n    loadingDecoder = false\n  }\n  return WebPDecoder\n}\ngetDecoder()\n\nconst WEBP_TESTER = /webp$/\nconst transformFile = async (file, toJpeg) => {\n  const name = file.name.replace(WEBP_TESTER, toJpeg ? 'jpg' : 'png')\n  const buffer = await file.arrayBuffer();\n  const WebPDecoder = await getDecoder();\n  const decoder = new WebPDecoder(buffer);\n\n  let canvas = document.createElement('canvas');\n  const blob = await decoder.decodeToBlob(canvas, false);\n\n  let a = document.createElement('a')\n  const url = a.href = URL.createObjectURL(blob)\n  a.download = name;\n  a.className = 'hide';\n  a.innerText = '下载文件'\n  document.body.appendChild(a)\n  a.click()\n  setTimeout(() => {\n    URL.revokeObjectURL(url)\n  }, 100)\n\n}\n\n\n\nfunction App() {\n\n  const [canceled, setCanceled] = useState(false)\n  const [isDragOver, setDrag] = useState(false)\n  const [isJPEG, setToJpeg] = useState(false)\n\n\n\n  const closeDrag = () => {\n    setCanceled(false)\n    setDrag(false)\n  }\n  const handleDragOver = useCallback((evt) => {\n    if (!isDragOver) {\n      setDrag(true)\n    }\n    if (canceled) {\n      event.dataTransfer.dropEffect = \"none\";\n    }\n    evt.stopPropagation();\n    evt.preventDefault()\n  }, [isDragOver, canceled])\n\n  const handleDrop = useCallback((evt) => {\n    let files = Array.from(evt.dataTransfer.files)\n    files = files.filter(file => file.type === 'image/webp')\n    closeDrag()\n    if (files && files.length) {\n      for (let i = 0; i < files.length; i++) {\n        transformFile(files[i], isJPEG)\n      }\n    }\n    evt.stopPropagation();\n    evt.preventDefault()\n  }, [isJPEG])\n\n  const handleESCKey = (evt) => {\n    console.log(evt)\n  }\n\n  const changeType = useCallback(() => {\n    setToJpeg(!isJPEG)\n  }, [isJPEG])\n\n  const lastEnter = useRef(null);\n\n  const listern = useCallback((evt) => {\n\n    switch (evt.type) {\n      case 'dragleave': {\n        if (lastEnter.current === evt.target) {\n          closeDrag()\n        }\n        break;\n      }\n      case 'dragenter': {\n        if (!isDragOver) {\n          setDrag(true);\n        }\n        lastEnter.current = evt.target;\n\n        break;\n      }\n    }\n\n    evt.stopPropagation();\n    evt.preventDefault()\n  }, [isDragOver])\n\n  useEffect(() => {\n\n    const el = document\n    el.addEventListener('dragenter', listern)\n    el.addEventListener('dragover', handleDragOver)\n    el.addEventListener('dragleave', listern)\n    el.addEventListener('drop', handleDrop)\n    el.addEventListener('keypress', handleESCKey)\n\n    return () => {\n      el.removeEventListener('dragenter', listern)\n      el.removeEventListener('dragover', handleDragOver)\n      el.removeEventListener('dragleave', listern)\n      el.removeEventListener('drop', handleDrop)\n      el.removeEventListener('keypress', handleESCKey)\n    }\n  }, [handleDragOver, handleDrop, listern])\n\n  const handleSelectFile = useCallback(async (evt) => {\n    let files = Array.from(evt.target.files);\n    evt.target.value = '';\n    closeDrag()\n    if (files && files.length) {\n      for (let i = 0; i < files.length; i++) {\n        transformFile(files[i], isJPEG)\n      }\n    }\n  }, [isJPEG])\n\n  const clsPNG = 'item ' + (isJPEG ? 'clickable' : 'link')\n  const clsJPG = 'item ' + (isJPEG ? 'link' : 'clickable')\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-logo\" title=\"你瞅啥？\">WebP Helper</div>\n        {isDragOver && (\n          <div className=\"drop-mask\">\n            <p>松开鼠标后，拖动的文件将会被转换，按 ESC 键取消</p>\n            <p ><span className=\"link\" onMouseDown={closeDrag}>知道了</span></p>\n          </div>)}\n        <p>\n          <code>拖动 *.webp 文件到此页面</code>\n        </p>\n        <p>或</p>\n        <p>\n          <input id=\"select-file\"\n            type='file' multiple\n            onChange={handleSelectFile}\n            accept=\".webp\"\n            hidden></input>\n          <label\n            className=\"btn\"\n            htmlFor=\"select-file\"\n          >\n            选择 *.webp 文件\n        </label></p>\n        <p className=\"hover-effect\">转换为 <span title=\"点击切换格式\" className={clsPNG} onClick={isJPEG ? changeType : undefined}\n        >*.png</span>  <span title=\"点击切换格式\" className={clsJPG} onClick={isJPEG ? undefined : changeType}>*.jpg</span>  格式</p>\n      </header >\n      <footer>\n        <p>\n          <small>webp_wasm来自<a href=\"https://github.com/kenchris/wasm-webp\" >kenchris/wasm-webp</a></small>\n        </p>\n      </footer>\n      <a className=\"github-fork-ribbon\" href=\"http://url.to-your.repo\" data-ribbon=\"Fork me on GitHub\" title=\"Fork me on GitHub\">Fork me on GitHub</a>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}